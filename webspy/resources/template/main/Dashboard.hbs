<!doctype html>
<html lang="en">
{{> header}}
<body class="bg-black" data-bs-theme="dark">
{{> dashboard_navigation}}
<main style="padding-left: 300px;">
    <div id="main-content"></div>
    {{> footer}}
</main>
{{> scripts}}
<script>
    let domainList, userList;

    refresh();
    function refresh(){
        const contentFetch = fetch("/api/domain/all");
        const userFetch = fetch("/api/user/all");

        Promise.all([contentFetch, userFetch])
                .then(responses => {
                    const response1 = checkStatus(responses[0]);
                    const response2 = checkStatus(responses[1]);

                    return Promise.all([response1, response2]);
                })
                .then(data => {
                    let response1 = data[0].json();
                    let response2 = data[1].json();

                    return Promise.all([response1, response2]);
                })
                .then(data => {
                    domainList = data[0];
                    userList = data[1];
                    populateNavBar();
                    renderHomeOverview();
                })
                .catch((response)=>{
                    console.log(response);
                    response.json()
                            .then(errorData => {
                                console.log(errorData);
                            })
                            .catch(error => {
                                console.error("Error parsing error response:", error);
                            });
                });
    }

    // Rendering functions
    function populateNavBar(){
        let container = document.querySelector("#nav-domain-container");
        let htmlContent = `<li><a onclick="" class="link-body-emphasis d-inline-flex text-decoration-none rounded">Overview</a></li>`;
        domainList.forEach((domain) => {
            let htmlDomain = `
                <li><a onclick="viewDomain(${domain.id})" class="link-body-emphasis d-inline-flex text-decoration-none rounded">${domain.name}</a></li>
            `;
            htmlContent+= htmlDomain;
        });
        htmlContent += `<li><a onclick="viewCreateDomain()" class="link-body-emphasis d-inline-flex text-decoration-none rounded">Add Domain</a></li>`;
        container.innerHTML = htmlContent;
    }

    function renderHomeOverview(){
        let container = document.querySelector("#main-content");
        let htmlContent = `
        <div class="d-flex justify-content-center align-items-end p-4 tiled-WS-background mb-3" style="position: relative;">
            <h2 class="fw-bold fs-1">Traffic Overview</h2>
        </div>
        `;

        container.innerHTML = htmlContent;
    }

    function renderAllUsers(){
        let container = document.querySelector("#main-content");
        let htmlContent = `
            <div class="d-flex justify-content-center align-items-end p-4 tiled-WS-background mb-3" style="position: relative;">
                <h2 class="fw-bold fs-1">All Users</h2>
            </div>
            <div class="container-fluid">
                <p class="fs-4">Ordered ${userList.length} users by date discovered</p>
                <div class="row row-cols-1 row-cols-md-3 row cols-lg-4">
        `;
        userList.forEach((user) => {
            let htmlDomain = `
                <div class="col mb-4">
                    <div class="px-3 py-3 rounded-3 bg-dark" onclick="viewUser('${user.ip}')">
                        <h3>${user.ip}</h3>
                        <p>${user.nickname !== 'null' ? "No Name" : user.nickname} &#8226; ${createBadge(user.threat_level)}</p>
                    </div>
                </div>
            `;
            htmlContent+= htmlDomain;
        });
        htmlContent += `</div></div>`;
        container.innerHTML = htmlContent;
    }

    function viewUser(ip){
        let container = document.querySelector("#main-content");
        if(ip===""){
            container.innerHTML = `
            <div class="d-flex justify-content-center align-items-end p-4 tiled-WS-background mb-3" style="position: relative;">
                <h2 class="fw-bold fs-1">User Details</h2>
            </div>
            <div class="container-fluid" style="margin-top: 100px; margin-bottom: 100px;">
                <div class="row">
                    <div class="col-md-6 offset-md-3 p-4">
                        <h2 class="fw-bold text-center mb-2">User lookup</h2>
                        <label for="user-lookup-form" class="form-label">IP address of user</label>
                        <input class="form-control form-control-lg" id="user-lookup-form" type="text" placeholder="192.168.0.1" aria-describedby="ipHelper">
                        <div id="ipHelper" class="form-text">ID must be exact</div>
                        <button class="btn btn-primary mb-3 mt-3">Search User</button>
                    </div>
                </div>
            </div>

            `;
        }else{
            // Check to see if user exists
            let user = userLookup(ip);

            if(user === undefined || user == null){
                // User not found
                viewUser('');
            }

            // Query database for reports
            Promise.all([fetch('/api/report/user/' + ip), fetch('/api/analytics/endpoint-requests/' + ip), fetch('/api/analytics/domain-requests/' + ip)])
                    .then(responses => {
                        const response1 = checkStatus(responses[0]);
                        const response2 = checkStatus(responses[1]);
                        const response3 = checkStatus(responses[2]);

                        return Promise.all([response1, response2, response3]);
                    })
                    .then(data => {
                        let response1 = data[0].json();
                        let response2 = data[1].json();
                        let response3 = data[2].json();

                        return Promise.all([response1, response2, response3]);
                    })
                    .then(data => {
                        let userReports = data[0];
                        let requestFrequency = data[1];
                        let domainFrequency = data[2];
                        let lastSeen = formatDate(userReports[0].timestamp);
                        let firstSeen = formatDate(userReports[userReports.length-1].timestamp);

                        let topEndpoints = "";
                        for(let i = 0; i < requestFrequency.length && i < 4; i++){
                            topEndpoints += `<p class="mb-1"><strong>${requestFrequency[i][1]}</strong>: ${requestFrequency[i][0]}</p>`;
                        }

                        // Report table
                        let reportTable = `
                            <table class="table table-dark table-striped table-responsive">
                                <thead class="table-dark">
                                    <tr>
                                        <th scope="col">Domain</th>
                                        <th scope="col">Timestamp</th>
                                        <th scope="col">url</th>
                                        <th scope="col">method</th>
                                        <th scope="col">header</th>
                                        <th scope="col">protocol</th>
                                        <th scope="col">Locale</th>
                                    </tr>
                                </thead>
                                <tbody>
                        `;
                        userReports.forEach((request) => {
                            reportTable += `
                            <tr>
                                <th scope="row">${request.domain_id}</th>
                                <td>${request.timestamp}</td>
                                <td>${request.request_url}</td>
                                <td>${request.request_method}</td>
                                <td>${request.request_header}</td>
                                <td>${request.request_protocol}</td>
                                <td>${request.client_locale}</td>
                            </tr>
                            `;
                        });
                        reportTable += `</tbody></table>`;

                        // Endpoint frequency table
                        let endpointTable = `
                            <table class="table table-dark table-striped table-responsive">
                                <thead class="table-dark">
                                    <tr>
                                        <th scope="col">Endpoint</th>
                                        <th scope="col">Frequency</th>
                                    </tr>
                                </thead>
                                <tbody>
                        `;
                        requestFrequency.forEach((request) => {
                            endpointTable += `
                            <tr>
                                <th scope="row">${request[0]}</th>
                                <td>${request[1]}</td>
                            </tr>
                            `;
                        });
                        endpointTable += `</tbody></table>`;


                        // Domain frequency table
                        let domainTable = `
                            <table class="table table-dark table-striped table-responsive">
                                <thead class="table-dark">
                                    <tr>
                                        <th scope="col">Domain</th>
                                        <th scope="col">Frequency</th>
                                    </tr>
                                </thead>
                                <tbody>
                        `;
                        domainFrequency.forEach((request) => {
                            domainTable += `
                            <tr>
                                <th scope="row">${request[0]}</th>
                                <td>${request[1]}</td>
                            </tr>
                            `;
                        });
                        domainTable += `</tbody></table>`;


                        container.innerHTML = `
                        <div class="d-flex justify-content-center align-items-end p-4 tiled-WS-background mb-3" style="position: relative;">
                            <h2 class="fw-bold fs-1">User Details</h2>
                        </div>
                        <div class="container-fluid">
                            <div class="row">
                                <div class="col-4 mb-2"><a class="text-secondary fs-4" onclick="renderAllUsers()">&lt; All Users</a></div>
                                <div class="col-8 mb-2"><a class="text-secondary fs-4 float-end">Edit User</a></div>
                                <div class="col-lg-4 col-12 mb-3">
                                    <div class="px-3 py-3 rounded-3 bg-dark">
                                        <h3 class="text-center fw-bold">${user.ip}</h3>
                                        <h5 class="text-center fw-bold">${user.nickname !== 'null' ? "No name" : user.nickname}</h5>
                                        <p class="text-center fs-4">${createBadge(user.threat_level)}</p>
                                        <p class="fw-bold text-center fs-4">Total Requests: ${userReports.length}</p>
                                    </div>
                                </div>
                                <div class="col-lg-8 col-12 mb-3">
                                    <div class="px-3 py-3 rounded-3 bg-dark h-100">graph</div>
                                </div>
                                <div class="col-lg-4 col-12 mb-3">
                                    <div class="px-3 py-3 rounded-3 bg-dark dual-info-box h-100">
                                        <div>
                                            <h5 class="fw-bold text-center">First Seen</h5>
                                            <p class="fs-4 text-center mb-0">${firstSeen}</p>
                                        </div>
                                        <div>
                                            <h5 class="fw-bold text-center">Last Seen</h5>
                                            <p class="fs-4 text-center mb-0">${lastSeen}</p>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-4 col-12 mb-3">
                                    <div class="px-3 py-3 rounded-3 bg-dark h-100">
                                        <h5 class="fw-bold text-center">Top Endpoints</h5>
                                        ${topEndpoints}
                                    </div>
                                </div>
                                <div class="col-lg-4 col-12 mb-3">
                                    <div class="px-3 py-3 rounded-3 bg-dark h-100">graph</div>
                                </div>
                                <div class="col-12 mb-3">
                                    <div class="px-3 py-3 rounded-3 bg-dark d-flex justify-content-between">
                                        <div>
                                            <h2 class="fw-bold">Conditional Access</h2>
                                        </div>
                                        <div>rat</div>
                                        <div>rat</div>
                                    </div>
                                </div>
                                <div class="col-12 mb-2">
                                    <div class="py-3">
                                        <ul class="nav nav-underline" id="myTab" role="tablist">
                                          <li class="nav-item" role="presentation">
                                            <button class="nav-link active" id="request-by-date-tab" data-bs-toggle="tab" data-bs-target="#request-by-date-tab-pane" type="button" role="tab" aria-controls="request-by-date-tab-pane" aria-selected="true">All Requests</button>
                                          </li>
                                          <li class="nav-item" role="presentation">
                                            <button class="nav-link" id="endpoint-frequency-tab" data-bs-toggle="tab" data-bs-target="#endpoint-frequency-tab-pane" type="button" role="tab" aria-controls="endpoint-frequency-tab-pane" aria-selected="false">Endpoint Frequency</button>
                                          </li>
                                          <li class="nav-item" role="presentation">
                                            <button class="nav-link" id="domain-frequency-tab" data-bs-toggle="tab" data-bs-target="#domain-frequency-tab-pane" type="button" role="tab" aria-controls="domain-frequency-tab-pane" aria-selected="false">Domain Frequency</button>
                                          </li>
                                        </ul>
                                        <div class="tab-content" id="myTabContent">
                                          <div class="tab-pane fade show active" id="request-by-date-tab-pane" role="tabpanel" aria-labelledby="request-by-date-tab" tabindex="0">${reportTable}</div>
                                          <div class="tab-pane fade" id="endpoint-frequency-tab-pane" role="tabpanel" aria-labelledby="endpoint-frequency-tab" tabindex="0">${endpointTable}</div>
                                          <div class="tab-pane fade" id="domain-frequency-tab-pane" role="tabpanel" aria-labelledby="domain-frequency-tab" tabindex="0">${domainTable}</div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    `;
                    })
                    .catch((response)=>{
                        console.log(response);
                        response.json()
                                .then(errorData => {
                                    console.log(errorData);
                                })
                                .catch(error => {
                                    console.error("Error parsing error response:", error);
                                });
                    });
        }
    }
</script>

<script>
    const createBadge = (status) => {
        let badgeClass = '';
        switch (status) {
            case 'Threat':
                badgeClass = 'badge text-bg-danger';
                break;
            case 'Suspicious':
                badgeClass = 'badge text-bg-warning';
                break;
            case 'Normal':
                badgeClass = 'badge text-bg-success';
                break;
            case 'NotAssessed':
                badgeClass = 'badge text-bg-secondary';
                break;
            default:
                badgeClass = 'badge text-bg-secondary';
                break;
        }
        return `<span class="${badgeClass}">${status}</span>`;
    };
    function userLookup(ip){
        return userList.find(user => user.ip === ip);
    }
    function formatDate(dateString) {
        const date = new Date(dateString);
        const mm = String(date.getMonth() + 1).padStart(2, '0');
        const dd = String(date.getDate()).padStart(2, '0');
        const yyyy = date.getFullYear();
        return `${mm}/${dd}/${yyyy}`;
    }
</script>
</body>
</html>
